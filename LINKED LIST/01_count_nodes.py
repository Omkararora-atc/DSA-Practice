## Given a singly linked list.
# The task is to find the length of the linked list,
# where length is defined as the number of nodes in the linked list.
class LinkedList:
    def __init__(self):
        self.head=None
        self.next=None
    def count(self,head):
        if head is None:
            return 0
        count=1
        curr=head
        while curr.next!=head:
            count+=1
            curr=curr.next
        return count
### Example usage, driver code is generated by the AI.
if __name__ == "__main__":
    # Create a linked list with 3 nodes
    ll = LinkedList()
    ll.head = ll
    ll.next = ll  # Pointing to itself for simplicity

    # Add nodes to the linked list
    node1 = LinkedList()
    node2 = LinkedList()
    node3 = LinkedList()

    ll.head = node1
    node1.next = node2
    node2.next = node3
    node3.next = ll.head  # Circular link

    # Count the nodes in the linked list
    print("Number of nodes in the linked list:", ll.count(ll.head))  # Output: 3